/* *,html,body{
  font-family: 'Lato';
  font-style: normal;
}
.App-div-first{
  height: 100vh;
}


.loginmain{

  height: 100%;

}
.logologin{
  max-width: 45px;
  max-height: 51.37px;
}
.logologintext{
  font-weight: 800;
font-size: 24px;
color: #ED7966;

}
.login-button{
  width: 100% ;
  height: 39px;
  background: #ED7966;
border-radius: 5px;
border: 0;
color: #fff;
}
.login-input{
  width: 100%;
  max-height: 44px;
}
.errormsg{
  color: red;
}
.admin-student{
  list-style: none;
}

.Login-divider{
  border-top: solid 1px;
  color: #E3E3E3;
}
.SideBar{

 
  /* position: fixed; */
   /*margin: 0;
  padding: 0;
  width: 17%; */
  /* width: 100%;
  height: 100%; 
  background-color: #ED7966;
}

.whitetext{
  color: #fff;
  font-family: 'Lato';
font-style: normal;
font-weight: 800;
font-size: 24px;

}
.whitelogo{
 max-width: 36px ; 
 height: 41px;
}
.sidebtn{
 display: flex;
 flex-direction: column;
 align-items: flex-start;
}
.sidebuttons{
  background-color: #ED7966 ;
  border: none ;
  color: #fff; */
  /* width: 80%;
  height: 44px; */
/* font-weight: 500;
font-size: 16px;
  border-radius: 5px;

}

.sidebuttons:hover{
  background-color: #EC8D7E ; 
  
  
}
.sidemd{
  font-size: 20px;
 
} */

/* -------------- */
/* 
.div-main{
  height: 100%;
  width: 78%;
  
  
  
  

}
.inputsearch{
  width: 85%;
  border: none;
  height: 40px;

}
.inputsearch:focus{
  outline: none;
}
.mainsearch-div{
  width: 90%;
}
.search-main-icon{

  
  background: #FFFFFF;
border: 1px solid #CECECE;
border-radius: 5px;


}
.search-btn{
  justify-content: space-between;
}
.searchicon{
  color: #939393;
  height: 20.91px;
  width: 100%;
}
.main-button{
  background: #ED7966;
border-radius: 5px;
border: none;
font-weight: 500;
font-size: 16px;
color: #fff;
text-align: center;
padding-inline: 20px;
padding-block: 10px;
}
.student-table , .Allbooks-table , .Issuepage-table{      
  border-bottom: solid 1px #E3E3E3;
}

.student-row,.Allbooks-row{      
  border-bottom: solid 1px #E3E3E3;
}
.head-student,.head-Allbooks , .head-Issuepage{
  font-weight: 500;
font-size: 16px;
color: #646464;
flex-wrap: wrap;
}
.student-content,.Allbooks-content , .Issuepage-row{
  font-weight: 500;
font-size: 16px;
color: #09174A;
}
.main-header{
  font-weight: 600;
font-size: 20px;
color: #09174A;
}
.Student-eye{
  font-size: 20px ;
  color:  #7E7E7F;;
}
.Student-delete,.Allbooks-delete{
  font-size: 20px ;
  color: #D04444;;
}
.Student-edit,.Allbooks-edit{
  font-size: 20px ;
  color: #7E7E7F;;
}
.student-main{
  height: 100vh;
}
.student-content{
  flex-wrap: wrap;
}
.AllMain-main{
  height: 100%;
}
.IssueMain-main{
  height: 100vh;
}



<div className="Allbooks-table d-flex mx-md-3 mt-5 p-md-3 justify-content-between ">
<span className="head-Allbooks col-2">Book Title</span>
<span className="head-Allbooks col-2">Author</span>
<span className="head-Allbooks col-1">Language</span>
<span className="head-Allbooks col-1">Total Copies</span>
<span className="head-Allbooks col-1">Remaining</span>
<span className="head-Allbooks col-1">Actions</span>
</div>



<div className="Allbooks-row d-flex mx-md-3  p-md-3 justify-content-between ">
<span className="Allbooks-content col-2">It Start With Us</span>
<span className="Allbooks-content col-2">Colleen Hoover</span>
<span className="Allbooks-content col-1">English</span>
<span className="Allbooks-content col-1">5</span>
<span className="Allbooks-content col-1">2</span>
<span className="Allbooks-content col-1  d-flex gap-md-2 p-0 mt-1">
<MdModeEditOutline className="Allbooks-edit"/>
<RiDeleteBin6Line className="Allbooks-delete"/>
</span>
</div>


<div className="Issuepage-table d-flex mx-md-3 mt-5 p-md-3 justify-content-between ">
<span className="head-Issuepage col-2">Book Title</span>
<span className="head-Issuepage col-2">Student</span>
<span className="head-Issuepage col-1">Issue Date</span>
<span className="head-Issuepage col-1">Due Date</span>
<span className="head-Issuepage col-1">Fine  (Rs. 10 per day) </span>
<span className="head-Issuepage col-1">Actions</span>
</div>

<input className="inputsearch" type="search"  placeholder="Search by book title or author "/>

<input className="inputsearch" type="text"  placeholder="Search by book title or student "/>


<Form.Control  type="search" className="inputsearch"  placeholder="Search by book title or author " /> */ 


 <div>
                <div className="student-table d-flex mx-md-3 mt-5 p-md-3 justify-content-between">
                <span className="head-student ">Name</span>
                <span className="head-student ">Email</span>
                <span className="head-student ">Actions</span>
                </div>


                {studentdata.map((item)=> 
                <div className="student-row d-flex mx-md-3  p-md-3 justify-content-between" key={item.id}>
                <span className="student-content ">{item.name}</span>
                <span className="student-content ">{item.email}</span>
                <span className="student-content  d-flex gap-md-2 p-0 mt-1">
                <MdModeEditOutline className="Student-edit"/>
                <RiDeleteBin6Line className="Student-delete"onClick={() => studentDeleteFunc(item.id)}/>
                <AiOutlineEye className="Student-eye"/>
                </span>
                </div>
                )}
            </div>


            onClick={() => studentDeleteFunc(item.id)}


             {
    id : 1,
    name: "ggg",
    email: "fvf",
    password : "hggg" ,
    position : 'student'
  },
  {
    id : 2,
    name: "g33gg",
    email: "fvf",
    password : "hggg" ,
    position : 'student'
  },
  {
    id : 3,
    name: "ggg",
    email: "fvfd",
    password : "hggsg" ,
    position : 'studendt'
  }

  () => { handleShowDeleteBook() ;allBookGetkey(item.bookid)}

  allbooksEditKey

   AllbooksEditTitleget(item.title) ;
                    AllbooksEditAuthorget(item.author);
                    AllbooksEditLanguageget(item.language);
                    AllbooksEditTotalcopiesget(item.totalcopies)
                    AllbooksEditRemainingget(item.remaining)



  const BookTitleFunc = (event) => {
    const value = event.target.value
    setBookTitle(value)
    console.log(bookTitle)
  }

  const BookAuthorFunc = (event) => {
    const value = event.target.value
    setBookAuthor(value)
    console.log(bookAuthor)
  }
  
  const BookLanguageFunc = (event) => {
    const value = event.target.value
    setBookLanguage(value)
    console.log(bookLanguage)
  }
  const BookTotalCopiesFunc = (event) => {
    const value = event.target.value
    setbookTotalCopies(value)
    console.log(booktotalCopies)
  }

  const BookRemainingCopiesFunc = (event) => {
    const value = event.target.value
    setbookRemainingCopies(value)
    console.log(bookremainingCopies)

  }

  



  <Modal className='px-3 ' show={showAddBook} onHide={handleCloseBook}>
        <Modal.Header className='IssueBookModalHeader mx-4 ps-0' closeButton>
          <Modal.Title className='IssueBookModalTitle' > Edit Book  </Modal.Title>
          
        </Modal.Header>
        <Modal.Body className='px-4'>
          <Form>

            

            <Form.Label className='IssueBookModalLabel'>Book</Form.Label>
            <Form.Select  aria-label="Default select example">
            <option>Select Book <Student></Student></option>
            <option value="Malayalam">Malayalam</option>
          </Form.Select>

            
            <Form.Label className='IssueBookModalLabel'>Student</Form.Label>
            <Form.Select  aria-label="Default select example">
            <option>Select Student <Student></Student></option>
            <option value="Malayalam">Malayalam</option>
          </Form.Select>

          <Form.Group className="mb-3 " controlId="exampleForm.ControlInput1">
              <Form.Label className='IssueBookModalLabel'>Issue Date</Form.Label>
              <Form.Control
                type="Date"
                placeholder="09-11-2022"
                />
            </Form.Group>

            <Form.Group className="mb-3 " controlId="exampleForm.ControlInput2">
            <Form.Label className='IssueBookModalLabel'>Due Date</Form.Label>
            <Form.Control
              type="Date"
              
              />
          </Form.Group>
            
          </Form>
        </Modal.Body>
        <Modal.Footer className='mx-4'>
          <button className='IssueBookCloseBtn'  >
            Cancel
          </button>
          <button className='IssueBookAddBtn' >
            Issue Book
          </button>
        </Modal.Footer>
      </Modal>
    


    array.filter(kk =>
    
    if( = '')
    return kk

    else ....




           <Modal show={show} onHide={handleClose}>
        <Modal.Header closeButton>
          <Modal.Title>Modal heading</Modal.Title>
        </Modal.Header>
        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={handleClose}>
            Close
          </Button>
          <Button variant="primary" onClick={handleClose}>
            Save Changes
          </Button>
        </Modal.Footer>
      </Modal>
    
    
    
    )